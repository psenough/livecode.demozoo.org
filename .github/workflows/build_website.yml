# This is a basic workflow to help you get started with Actions

name: Build website

# Controls when the action will run.
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt werkzeug==2.3.7
          
      - name: Configure Git
        run: |
          git config user.name "Publisher"
          git config user.email "publisher@users.noreply.github.com"

      - name: Update Database
        run: |
          python livecode update
          git add cache/*
          git add public/data/*
          git add public/media/*
          # Only commit and push if there are staged changes.
          git diff --staged --quiet || git commit -m "Update Demozoo handles" && git push origin main

      - name: Switch to branch 'gh-pages'
        run: |
          git branch -f gh-pages HEAD
          git checkout gh-pages

      - name: Generate HTML
        run: |
          python livecode generate
          mkdocs build -d public/docs

      #- name: Generate Doc
      #  run: |
      #    mkdir -p doc
      #    generate-schema-doc meta/event.schema.json doc/schema.html

      - name: Save commit hash to file
        # Provide a change in case regeneration didn't change any files
        # so upcoming Git commands `add` and `commit` succeed.
        run: git rev-parse --short HEAD > public/commithash.txt

      - run: |
          git add -A
          git commit -m "Publish"
          git push -f origin `git subtree split -P public`:refs/heads/gh-pages
